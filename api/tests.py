# Django
from api.serializers import HostSerializer, VulnerabilityDetailSerializer, VulnerabilitySerializer
from rest_framework import status
from rest_framework.test import APIClient, APITestCase

# Local
from api.models import AffectedHost, Host, Vulnerability
# Third party


class HostTests(APITestCase):
    client = APIClient()

    def setUp(self):

        self.host_post = {
            "name": "ServerTeste",
            "ip_address": "192.168.11.1",
            "risk": 8.5,
        }

        self.host = Host.objects.create(
            name = "host1",
            ip_address = "192.168.1.10",
            risk = 2.5
        )

        self.vulnerability = Vulnerability.objects.create(
            name = "Vulnerability1",
            severity = "Media",
            cvss = 9.2
        )

        self.affected_host = AffectedHost.objects.create(
            host_id = self.host.pk,
            vulnerability_id = self.vulnerability.pk,
            corrected = False
        )

    def test_create_host(self):
        response = self.client.post('/hosts/', self.host_post)
        self.assertEqual(response.status_code, status.HTTP_201_CREATED)

    def test_list_all_hosts(self):
        response = self.client.get('/hosts/')

        hosts = Host.objects.all() 
        serializer = HostSerializer(hosts, many=True)
        self.assertEqual(response.status_code, status.HTTP_200_OK)
        self.assertEqual(response.data['results'], serializer.data)

    def test_host_detail(self):
        response = self.client.get(f'/hosts/{self.host.pk}/host_detail/')

        host = Host.objects.get(id=self.host.pk)
        serializer_host = HostSerializer(host)

        vulnerabilities_corrected = AffectedHost.objects.all().filter(
            host__id = self.host.pk,
            corrected=True
        )

        serializer_vulnerabilities_corrected = VulnerabilityDetailSerializer(
            vulnerabilities_corrected, 
            many = True
        )

        vulnerabilities_not_corrected = AffectedHost.objects.all().filter(
            host__id = self.host.pk,
            corrected=False
        )

        serializer_vulnerabilities_not_corrected = VulnerabilityDetailSerializer(
            vulnerabilities_not_corrected, 
            many = True
        )

        host_detail = {
            "host": serializer_host.data,
            "vulnerabilities_corrected": serializer_vulnerabilities_corrected.data,
            "vulnerabilities_not_corrected": serializer_vulnerabilities_not_corrected.data
        }

        self.assertEqual(response.data, host_detail, msg="Test of host detail are failed")
        self.assertEqual(response.status_code, status.HTTP_200_OK)
        

# Create your tests here.
