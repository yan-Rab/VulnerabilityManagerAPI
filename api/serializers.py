# Django


# Third party

from django.db.models import fields
from rest_framework import serializers
from rest_framework.fields import IntegerField


# Local
from .models import AffectedHost, Host,Vulnerability

class VulnerabilitySerializer(serializers.ModelSerializer):
    affected_hosts_amount = IntegerField(read_only = True)
    
    class Meta:
        model = Vulnerability
        fields = "__all__"
        

class VulnerabilityDetailSerializer(serializers.ModelSerializer):
    vulnerability = VulnerabilitySerializer()

    class Meta:
        model = AffectedHost
        fields = [
            'vulnerability',
            'corrected',
        ]


class HostSerializer(serializers.ModelSerializer):
    
    class Meta:
        model = Host
        fields = "__all__"


class HostDetailSerializer(serializers.Serializer):
    host = HostSerializer()

    vulnerabilities_corrected = serializers.ListField(
        child = VulnerabilityDetailSerializer()
    )

    vulnerabilities_not_corrected = serializers.ListField(
        child = VulnerabilityDetailSerializer()
    )


class AffectedHostSerializerList(serializers.ModelSerializer):
    host = HostSerializer()
    vulnerability = VulnerabilitySerializer()

    class Meta:
        model = AffectedHost
        fields = [
            'created',
            'id',
            'host',
            'vulnerability',
            'corrected'
        ]


class AffectedHostSerializerCreate(serializers.ModelSerializer):

    class Meta:
        model = AffectedHost
        fields = [
            'created',
            'id',
            'host',
            'vulnerability',
            'corrected'
        ]


class AffectedHostSerializerUpdate(serializers.ModelSerializer):
    class Meta:
        model = AffectedHost
        fields = [
            'corrected'
        ]
    