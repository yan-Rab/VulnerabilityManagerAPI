# Django


# Third party

from rest_framework import serializers


# Local
from .models import AffectedHosts, Hosts,Vulnerability

class VulnerabilitySerializer(serializers.ModelSerializer):
    class Meta:
        model = Vulnerability
        fields = "__all__"

class VulnerabilityDetailSerializer(serializers.ModelSerializer):
    vulnerability = VulnerabilitySerializer()

    class Meta:
        model = AffectedHosts
        fields = [
            'vulnerability',
            'corrected',
        ]


class HostSerializer(serializers.ModelSerializer):

    class Meta:
        model = Hosts
        fields = "__all__"


class HostDetailSerializer(serializers.Serializer):
    host = HostSerializer()

    vulnerabilities_corrected = serializers.ListField(
        child = VulnerabilityDetailSerializer()
    )

    vulnerabilities_not_corrected = serializers.ListField(
        child = VulnerabilityDetailSerializer()
    )


class AffectedHostsSerializerRelation(serializers.ModelSerializer):
    host = HostSerializer()
    vulnerability = VulnerabilitySerializer()

    class Meta:
        model = AffectedHosts
        fields = [
            'created',
            'id',
            'host',
            'vulnerability',
            'corrected'
        ]


class AffectedHostsSerializerEntity(serializers.ModelSerializer):

    class Meta:
        model = AffectedHosts
        fields = [
            'created',
            'id',
            'host',
            'vulnerability',
            'corrected'
        ]


class CardHostSerializer(serializers.Serializer):
    total_hosts = serializers.IntegerField()
    vulnerable_hosts_amount = serializers.IntegerField()


class CardVulnerabilitySerializer(serializers.Serializer):
    total_vulnerabilities = serializers.IntegerField()
    vulnerabilities_not_corrected = serializers.IntegerField()
